"""Add royalty_splits to MusicRelease

Revision ID: 86307c7f1deb
Revises: 42ccc933830f
Create Date: 2025-08-21 08:54:56.711050

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86307c7f1deb'
down_revision: Union[str, None] = '42ccc933830f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('music_releases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('artist', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('release_meta', sa.JSON(), nullable=True),
    sa.Column('royalty_splits', sa.JSON(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_music_releases_artist'), 'music_releases', ['artist'], unique=False)
    op.create_index(op.f('ix_music_releases_id'), 'music_releases', ['id'], unique=False)
    op.create_index(op.f('ix_music_releases_title'), 'music_releases', ['title'], unique=False)
    op.drop_index(op.f('ix_releases_artist'), table_name='releases')
    op.drop_index(op.f('ix_releases_id'), table_name='releases')
    op.drop_index(op.f('ix_releases_title'), table_name='releases')
    op.drop_table('releases')
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('ADMIN', 'MUSIC_CREATOR', 'BOOK_AUTHOR', 'ELEARNING_INSTRUCTOR', name='userrole'),
               type_=sa.String(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=sa.String(),
               type_=postgresql.ENUM('ADMIN', 'MUSIC_CREATOR', 'BOOK_AUTHOR', 'ELEARNING_INSTRUCTOR', name='userrole'),
               nullable=False)
    op.create_table('releases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('artist', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('audio_file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('release_meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('releases_owner_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('releases_pkey'))
    )
    op.create_index(op.f('ix_releases_title'), 'releases', ['title'], unique=False)
    op.create_index(op.f('ix_releases_id'), 'releases', ['id'], unique=False)
    op.create_index(op.f('ix_releases_artist'), 'releases', ['artist'], unique=False)
    op.drop_index(op.f('ix_music_releases_title'), table_name='music_releases')
    op.drop_index(op.f('ix_music_releases_id'), table_name='music_releases')
    op.drop_index(op.f('ix_music_releases_artist'), table_name='music_releases')
    op.drop_table('music_releases')
    # ### end Alembic commands ###
